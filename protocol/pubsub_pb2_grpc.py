# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import pubsub_pb2 as pubsub__pb2


class WormholeStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Login = channel.unary_unary(
        '/protocol.Wormhole/Login',
        request_serializer=pubsub__pb2.LoginRequest.SerializeToString,
        response_deserializer=pubsub__pb2.LoginResponse.FromString,
        )
    self.CreateTopic = channel.unary_unary(
        '/protocol.Wormhole/CreateTopic',
        request_serializer=pubsub__pb2.CreateTopicRequest.SerializeToString,
        response_deserializer=pubsub__pb2.CreateTopicResponse.FromString,
        )
    self.DestroyTopic = channel.unary_unary(
        '/protocol.Wormhole/DestroyTopic',
        request_serializer=pubsub__pb2.DestroyTopicRequest.SerializeToString,
        response_deserializer=pubsub__pb2.DestroyTopicResponse.FromString,
        )
    self.Publish = channel.stream_stream(
        '/protocol.Wormhole/Publish',
        request_serializer=pubsub__pb2.PublishRequest.SerializeToString,
        response_deserializer=pubsub__pb2.PublishResponse.FromString,
        )
    self.Subscribe = channel.stream_stream(
        '/protocol.Wormhole/Subscribe',
        request_serializer=pubsub__pb2.SubscribeRequest.SerializeToString,
        response_deserializer=pubsub__pb2.SubscribeResponse.FromString,
        )
    self.Status = channel.unary_unary(
        '/protocol.Wormhole/Status',
        request_serializer=pubsub__pb2.StatusRequest.SerializeToString,
        response_deserializer=pubsub__pb2.StatusResponse.FromString,
        )
    self.Statistics = channel.unary_unary(
        '/protocol.Wormhole/Statistics',
        request_serializer=pubsub__pb2.StatisticsRequest.SerializeToString,
        response_deserializer=pubsub__pb2.StatisticsResponse.FromString,
        )


class WormholeServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Login(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateTopic(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DestroyTopic(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Publish(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Subscribe(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Status(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Statistics(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_WormholeServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Login': grpc.unary_unary_rpc_method_handler(
          servicer.Login,
          request_deserializer=pubsub__pb2.LoginRequest.FromString,
          response_serializer=pubsub__pb2.LoginResponse.SerializeToString,
      ),
      'CreateTopic': grpc.unary_unary_rpc_method_handler(
          servicer.CreateTopic,
          request_deserializer=pubsub__pb2.CreateTopicRequest.FromString,
          response_serializer=pubsub__pb2.CreateTopicResponse.SerializeToString,
      ),
      'DestroyTopic': grpc.unary_unary_rpc_method_handler(
          servicer.DestroyTopic,
          request_deserializer=pubsub__pb2.DestroyTopicRequest.FromString,
          response_serializer=pubsub__pb2.DestroyTopicResponse.SerializeToString,
      ),
      'Publish': grpc.stream_stream_rpc_method_handler(
          servicer.Publish,
          request_deserializer=pubsub__pb2.PublishRequest.FromString,
          response_serializer=pubsub__pb2.PublishResponse.SerializeToString,
      ),
      'Subscribe': grpc.stream_stream_rpc_method_handler(
          servicer.Subscribe,
          request_deserializer=pubsub__pb2.SubscribeRequest.FromString,
          response_serializer=pubsub__pb2.SubscribeResponse.SerializeToString,
      ),
      'Status': grpc.unary_unary_rpc_method_handler(
          servicer.Status,
          request_deserializer=pubsub__pb2.StatusRequest.FromString,
          response_serializer=pubsub__pb2.StatusResponse.SerializeToString,
      ),
      'Statistics': grpc.unary_unary_rpc_method_handler(
          servicer.Statistics,
          request_deserializer=pubsub__pb2.StatisticsRequest.FromString,
          response_serializer=pubsub__pb2.StatisticsResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'protocol.Wormhole', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
